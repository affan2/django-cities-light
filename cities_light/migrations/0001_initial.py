# Generated by Django 2.2.3 on 2019-09-05 08:54

import autoslug.fields
import cities_light.abstract_models
import cities_light.validators
from django.db import migrations, models
import django.db.models.deletion
import hvad.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ascii', models.CharField(blank=True, db_index=True, max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name_ascii')),
                ('geoname_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('alternate_names', models.TextField(blank=True, default='', null=True)),
                ('state', models.SmallIntegerField(choices=[(-1, 'Deleted'), (0, 'Draft'), (1, 'Published'), (2, 'For Review'), (3, 'Expired'), (4, 'Cancelled')], default=1, verbose_name='Publish state')),
                ('default_language', models.CharField(choices=[('en', 'English')], default='en', max_length=2, verbose_name='Default language')),
                ('search_names', cities_light.abstract_models.ToSearchTextField(blank=True, default='', max_length=4000)),
                ('latitude', models.DecimalField(blank=True, decimal_places=5, max_digits=8, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=5, max_digits=8, null=True)),
                ('population', models.BigIntegerField(blank=True, db_index=True, null=True)),
                ('feature_code', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('timezone', models.CharField(blank=True, db_index=True, max_length=40, null=True, validators=[cities_light.validators.timezone_validator])),
                ('allow_translate', models.BooleanField(default=True, verbose_name='Allow Translate')),
            ],
            options={
                'verbose_name_plural': 'cities',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ascii', models.CharField(blank=True, db_index=True, max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name_ascii')),
                ('geoname_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('alternate_names', models.TextField(blank=True, default='', null=True)),
                ('state', models.SmallIntegerField(choices=[(-1, 'Deleted'), (0, 'Draft'), (1, 'Published'), (2, 'For Review'), (3, 'Expired'), (4, 'Cancelled')], default=1, verbose_name='Publish state')),
                ('default_language', models.CharField(choices=[('en', 'English')], default='en', max_length=2, verbose_name='Default language')),
                ('code2', models.CharField(blank=True, max_length=2, null=True, unique=True)),
                ('code3', models.CharField(blank=True, max_length=3, null=True, unique=True)),
                ('continent', models.CharField(choices=[('OC', 'Oceania'), ('EU', 'Europe'), ('AF', 'Africa'), ('NA', 'North America'), ('AN', 'Antarctica'), ('SA', 'South America'), ('AS', 'Asia')], db_index=True, max_length=2)),
                ('tld', models.CharField(blank=True, db_index=True, max_length=5)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('allow_translate', models.BooleanField(default=True, verbose_name='Allow Translate')),
            ],
            options={
                'verbose_name_plural': 'countries',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ascii', models.CharField(blank=True, db_index=True, max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name_ascii')),
                ('geoname_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('alternate_names', models.TextField(blank=True, default='', null=True)),
                ('state', models.SmallIntegerField(choices=[(-1, 'Deleted'), (0, 'Draft'), (1, 'Published'), (2, 'For Review'), (3, 'Expired'), (4, 'Cancelled')], default=1, verbose_name='Publish state')),
                ('default_language', models.CharField(choices=[('en', 'English')], default='en', max_length=2, verbose_name='Default language')),
                ('geoname_code', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('allow_translate', models.BooleanField(default=True, verbose_name='Allow Translate')),
            ],
            options={
                'verbose_name': 'region/state',
                'verbose_name_plural': 'regions/states',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegionTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('display_name', models.CharField(max_length=200)),
                ('source_language', models.CharField(choices=[('en', 'English')], default='en', max_length=2, verbose_name='Source language')),
                ('is_auto_translated', models.BooleanField(default=False, verbose_name='Auto Translated')),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', hvad.fields.MasterKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='cities_light.Region')),
            ],
            options={
                'db_table': 'cities_light_region_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
        ),
        migrations.AddField(
            model_name='region',
            name='_hvad_query',
            field=hvad.fields.SingleTranslationObject('cities_light.Region', 'cities_light.RegionTranslation'),
        ),
        migrations.AddField(
            model_name='region',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cities_light.Country'),
        ),
        migrations.CreateModel(
            name='CountryTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('source_language', models.CharField(choices=[('en', 'English')], default='en', max_length=2, verbose_name='Source language')),
                ('is_auto_translated', models.BooleanField(default=False, verbose_name='Auto Translated')),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', hvad.fields.MasterKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='cities_light.Country')),
            ],
            options={
                'db_table': 'cities_light_country_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
        ),
        migrations.AddField(
            model_name='country',
            name='_hvad_query',
            field=hvad.fields.SingleTranslationObject('cities_light.Country', 'cities_light.CountryTranslation'),
        ),
        migrations.CreateModel(
            name='CityTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('display_name', models.CharField(max_length=200)),
                ('source_language', models.CharField(choices=[('en', 'English')], default='en', max_length=2, verbose_name='Source language')),
                ('is_auto_translated', models.BooleanField(default=False, verbose_name='Auto Translated')),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', hvad.fields.MasterKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='cities_light.City')),
            ],
            options={
                'db_table': 'cities_light_city_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
        ),
        migrations.AddField(
            model_name='city',
            name='_hvad_query',
            field=hvad.fields.SingleTranslationObject('cities_light.City', 'cities_light.CityTranslation'),
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cities_light.Country'),
        ),
        migrations.AddField(
            model_name='city',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.Region'),
        ),
        migrations.AlterUniqueTogether(
            name='region',
            unique_together={('country', 'slug')},
        ),
        migrations.AlterUniqueTogether(
            name='city',
            unique_together={('region', 'slug')},
        ),
    ]
